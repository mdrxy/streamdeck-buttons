// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type ButtonCreate = {
  title: string
  /**
   * Button type (e.g. PSA, ID, SFX)
   */
  type: string
  description?: string | null
  /**
   * In seconds
   */
  duration?: number | null
  source?: string | null
}

export type ButtonPublic = {
  title: string
  /**
   * Button type (e.g. PSA, ID, SFX)
   */
  type: string
  description?: string | null
  /**
   * In seconds
   */
  duration?: number | null
  source?: string | null
  id: string
  created_by: string
  usage_count: number
  retired_at: string | null
}

export type ButtonRetirement = {
  id?: string
  button_id: string
  created_by: string
  retired_at?: string
  unretired_at?: string | null
}

/**
 * Response model for Button retirement records.
 */
export type ButtonRetirementsPublic = {
  data: Array<ButtonRetirement>
  count: number
}

export type ButtonsPublic = {
  data: Array<ButtonPublic>
  count: number
}

export type ButtonUpdate = {
  title?: string | null
  type?: string | null
  description?: string | null
  /**
   * In seconds
   */
  duration?: number | null
  source?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

/**
 * Generic message used in endpoint responses.
 */
export type Message = {
  message: string
}

/**
 * Input string used for password resets.
 */
export type NewPassword = {
  token: string
  new_password: string
}

/**
 * Pydantic model to speficy the required fields for user creation.
 *
 * TODO: consider moving this to the models module?
 */
export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

/**
 * Request model for retiring a Button.
 */
export type RetireButtonRequest = {
  retire?: boolean | null
}

/**
 * JSON payload containing access token.
 */
export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ButtonsListAllButtonsData = {
  limit?: number
  skip?: number
}

export type ButtonsListAllButtonsResponse = ButtonsPublic

export type ButtonsCreateButtonData = {
  requestBody: ButtonCreate
}

export type ButtonsCreateButtonResponse = ButtonPublic

export type ButtonsReadButtonData = {
  id: string
}

export type ButtonsReadButtonResponse = ButtonPublic

export type ButtonsUpdateButtonData = {
  id: string
  requestBody: ButtonUpdate
}

export type ButtonsUpdateButtonResponse = ButtonPublic

export type ButtonsDeleteButtonData = {
  force?: boolean
  id: string
}

export type ButtonsDeleteButtonResponse = Message

export type ButtonsIncrementButtonUsageData = {
  id: string
}

export type ButtonsIncrementButtonUsageResponse = ButtonPublic

export type ButtonsGetButtonUsageData = {
  id: string
}

export type ButtonsGetButtonUsageResponse = unknown

export type ButtonsUpdateRetirementData = {
  id: string
  requestBody: RetireButtonRequest
}

export type ButtonsUpdateRetirementResponse = ButtonPublic

export type ButtonsGetRetirementsData = {
  id: string
}

export type ButtonsGetRetirementsResponse = ButtonRetirementsPublic

export type ButtonsListAllRetirementsData = {
  limit?: number
  skip?: number
}

export type ButtonsListAllRetirementsResponse = ButtonRetirementsPublic

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean
